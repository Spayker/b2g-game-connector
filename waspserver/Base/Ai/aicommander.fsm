/*%FSM<COMPILE "C:\Program Files (x86)\Bohemia Interactive\Tools\FSM Editor Personal Edition\scriptedFSM.cfg, aicommander">*/
/*%FSM<HEAD>*/
/*
item0[] = {"Init",0,250,29.117783,-243.242416,119.117828,-193.242630,0.000000,"Init"};
item1[] = {"End",1,250,-216.387955,-52.508366,-126.387947,-2.508394,0.000000,"End"};
item2[] = {"Commander_Check",2,250,-82.090652,-139.314026,7.909359,-89.314034,0.000000,"Commander" \n "Check"};
item3[] = {"AI",4,218,43.444695,-138.881104,133.444702,-88.881126,0.000000,"AI"};
item4[] = {"Gameover",4,218,-216.387955,-139.464890,-126.387947,-89.464890,0.000000,"Gameover"};
item5[] = {"_",8,218,-51.736092,-228.307785,-21.083296,-207.387909,0.000000,""};
item6[] = {"Check_HQ",2,250,167.429672,-138.824554,257.429688,-88.824554,0.000000,"Check HQ"};
item7[] = {"Alive",4,218,167.029816,-63.614120,257.029968,-13.613998,0.000000,"Alive"};
item8[] = {"Check_HQ_Status",2,250,298.248291,-63.614052,388.248230,-13.614052,0.000000,"Check HQ" \n "Status"};
item9[] = {"Mobilized",4,218,433.250854,-64.045685,523.250732,-14.045616,0.000000,"Mobilized"};
item10[] = {"Deployed",4,218,298.503387,29.438709,388.503357,79.438721,0.000000,"Deployed"};
item11[] = {"",7,210,1027.204102,-330.018250,1035.203979,-322.018250,0.000000,""};
item12[] = {"",7,210,-41.498245,-331.121155,-33.498249,-323.121155,0.000000,""};
item13[] = {"Check_Status",2,250,567.105652,-64.265991,657.105652,-14.265972,0.000000,"Check" \n "Status"};
item14[] = {"Moving",4,218,709.035706,-103.210243,799.035706,-53.210236,0.000000,"Moving"};
item15[] = {"Empty",4,218,703.864319,-36.693626,793.864319,13.306374,0.000000,"Empty"};
item16[] = {"Spawn___Lead",2,250,853.857727,-35.590744,943.857727,14.409276,0.000000,"Spawn & Lead"};
item17[] = {"Check_Position",2,250,852.754883,-103.970093,942.754883,-53.970085,0.000000,"Check" \n "Position"};
item18[] = {"",7,210,1028.114868,-51.031216,1036.114990,-43.031216,0.000000,""};
item19[] = {"Check_Move",2,250,439.100250,29.323673,529.100098,79.323669,0.000000,"Check" \n "Move"};
item20[] = {"",7,210,1029.001221,-55.249153,1037.001221,-47.249153,0.000000,""};
item21[] = {"Proceed",4,218,436.745636,114.689537,526.745728,164.689575,0.000000,"Proceed"};
item22[] = {"Check_Base",2,250,292.344421,114.037247,382.344421,164.037247,0.000000,"Check" \n "Base"};
item23[] = {"Update",4,218,138.614502,145.674393,228.614502,195.674393,0.000000,"Update"};
item24[] = {"Skip",4,218,138.614502,78.700897,228.614502,128.700897,0.000000,"Skip"};
item25[] = {"Skip",2,250,-24.498369,79.781113,65.501648,129.781113,0.000000,"Skip"};
item26[] = {"Update_Base",2,4346,-24.498356,146.754593,65.501656,196.754593,0.000000,"Update" \n "Base"};
item27[] = {"_",8,218,-113.658813,123.267853,-83.006012,144.187729,0.000000,""};
item28[] = {"Check_Defenses",2,250,-263.351929,109.838028,-173.352142,159.838013,0.000000,"Check Defenses"};
item29[] = {"Update",4,218,-400.730560,148.182983,-310.730560,198.182983,0.000000,"Update"};
item30[] = {"Skip",4,218,-400.730560,81.209473,-310.730560,131.209488,0.000000,"Skip"};
item31[] = {"Skip_1",2,250,-563.843628,82.289688,-473.843506,132.289688,0.000000,"Skip"};
item32[] = {"Update_Defenses",2,250,-563.843628,149.263184,-473.843384,199.263184,0.000000,"Update" \n "Defenses"};
item33[] = {"_",8,218,-653.004028,125.776443,-622.351196,146.696320,0.000000,""};
item34[] = {"Check_Upgrades",2,250,-683.420288,273.342194,-593.420410,323.342194,0.000000,"Check Upgrades"};
item35[] = {"Update",4,218,-508.776093,300.503662,-418.775909,350.503662,0.000000,"Update"};
item36[] = {"Skip",4,218,-508.776093,233.530121,-418.775909,283.530151,0.000000,"Skip"};
item37[] = {"Skip_2",2,250,-329.947998,234.610321,-239.947815,284.610352,0.000000,"Skip"};
item38[] = {"Update_Upgrades",2,250,-329.947998,301.583862,-239.947693,351.583862,0.000000,"Update" \n "Upgrades"};
item39[] = {"_",8,218,-167.467773,275.580872,-136.814941,296.500732,0.000000,""};
item40[] = {"Check_Move_1",2,250,-135.812561,688.819275,-45.812672,738.819336,0.000000,"Check Move"};
item41[] = {"",7,210,1026.111328,696.930481,1034.111206,704.930481,0.000000,""};
link0[] = {0,5};
link1[] = {2,3};
link2[] = {2,4};
link3[] = {3,6};
link4[] = {4,1};
link5[] = {5,2};
link6[] = {6,7};
link7[] = {7,8};
link8[] = {8,9};
link9[] = {8,10};
link10[] = {9,13};
link11[] = {10,19};
link12[] = {11,12};
link13[] = {12,5};
link14[] = {13,14};
link15[] = {13,15};
link16[] = {14,17};
link17[] = {15,16};
link18[] = {16,18};
link19[] = {17,18};
link20[] = {18,11};
link21[] = {19,21};
link22[] = {21,22};
link23[] = {22,23};
link24[] = {22,24};
link25[] = {23,26};
link26[] = {24,25};
link27[] = {25,27};
link28[] = {26,27};
link29[] = {27,28};
link30[] = {28,29};
link31[] = {28,30};
link32[] = {29,32};
link33[] = {30,31};
link34[] = {31,33};
link35[] = {32,33};
link36[] = {33,34};
link37[] = {34,35};
link38[] = {34,36};
link39[] = {35,38};
link40[] = {36,37};
link41[] = {37,39};
link42[] = {38,39};
link43[] = {39,40};
link44[] = {40,41};
link45[] = {41,20};
globals[] = {0.000000,0,0,0,0,640,480,1,104,6316128,1,-791.308594,1252.725220,1306.524536,-405.304962,1046,876,1};
window[] = {2,-1,-1,-1,-1,989,80,1800,97,3,1068};
*//*%FSM</HEAD>*/
class FSM
{
  fsmName = "aicommander";
  class States
  {
    /*%FSM<STATE "Init">*/
    class Init
    {
      name = "Init";
      init = /*%FSM<STATEINIT""">*/"_side = _this select 0;" \n
       "_sideText = Str _side;" \n
       "_sideID = (_side) Call WFCO_FNC_GetSideID;" \n
       "_hq = (_side) Call WFCO_FNC_GetSideHQ;" \n
       "_logik = (_side) Call WFCO_FNC_GetSideLogic;" \n
       "_maxplayers = _logik getVariable ""wf_teams_count"";" \n
       "" \n
       "_lastHQMoveOrder = 0;" \n
       "_lastHQMovePos = getPosATL _hq;" \n
       "" \n
       "_lastRepairMoveOrder = 0;" \n
       "_lastRepairMosPos = [0,0,0];" \n
       "" \n
       "_lastUpdate = -500;" \n
       "_lastUpdateBase = -500;" \n
       "_lastUpdateDefenses = -500;" \n
       "_lastUpdateMove = -500;" \n
       "_lastUpdateTypes = -500;" \n
       "_lastUpdateUpgrades = -500;" \n
       "" \n
       "//--- Init the base types." \n
       "_types = missionNamespace getVariable Format[""WF_%1STRUCTURES"",_sideText];" \n
       "_names = missionNamespace getVariable Format[""WF_%1STRUCTURENAMES"",_sideText];" \n
       "_costs = missionNamespace getVariable Format[""WF_%1STRUCTURECOSTS"",_sideText];" \n
       "_scripts = missionNamespace getVariable Format[""WF_%1STRUCTURESCRIPTS"",_sideText];" \n
       "" \n
       "_eastStructuresNames = missionNamespace getVariable ""WF_EASTSTRUCTURENAMES"";" \n
       "_westStructuresNames = missionNamespace getVariable ""WF_WESTSTRUCTURENAMES"";" \n
       "" \n
       "_hqCanMove = false;" \n
       "_hqDeployAt = [_hq, startingLocations] Call WFCO_FNC_GetClosestEntity;" \n
       "_hqDeployRange = missionNamespace getVariable ""WF_C_STRUCTURES_HQ_RANGE_DEPLOYED"";" \n
       "_hqType = missionNamespace getVariable Format[""WF_%1HEADQUARTERSTYPE"",_sideText];" \n
       "" \n
       "_baseAiInterval = missionNamespace getVariable ""WF_C_AI_COMMANDER_MOVE_INTERVALS"";" \n
       "_baseAiIntervalLast = time;" \n
       "_baseAlive = [];" \n
       "_baseDefenses = [];" \n
       "_baseDefensesTemplate = [[missionNamespace getVariable Format[""WF_%1DEFENSES_MG"",_sideText],[150,150],0,""MG""],[missionNamespace getVariable Format[""WF_%1DEFENSES_MG"",_sideText],[-150,150],0,""MG""],[missionNamespace getVariable Format[""WF_%1DEFENSES_MG"",_sideText],[-150,-150],180,""MG""],[missionNamespace getVariable Format[""WF_%1DEFENSES_MG"",_sideText],[150,-150],180,""MG""],[missionNamespace getVariable Format[""WF_%1DEFENSES_AAPOD"",_sideText],[0,135],0,""AAPOD""],[missionNamespace getVariable Format[""WF_%1DEFENSES_AAPOD"",_sideText],[110,-145],90,""AAPOD""],[missionNamespace getVariable Format[""WF_%1DEFENSES_AAPOD"",_sideText],[-110,-145],270,""AAPOD""],[missionNamespace getVariable Format[""WF_%1DEFENSES_MASH"",_sideText],[0,-80],180,""MASH""],[missionNamespace getVariable Format[""WF_%1DEFENSES_ATPOD"",_sideText],[0,-130],0,""""],[missionNamespace getVariable Format[""WF_%1DEFENSES_ATPOD"",_sideText],[-100,130],315,""""],[missionNamespace getVariable Format[""WF_%1DEFENSES_ATPOD"",_sideText],[100,130],45,""""],[missionNamespace getVariable Format[""WF_%1DEFENSES_CANNON"",_sideText],[120,120],0,""""],[missionNamespace getVariable Format[""WF_%1DEFENSES_CANNON"",_sideText],[-120,-120],180,""""]];" \n
       "_baseDirections = missionNamespace getVariable Format[""WF_%1STRUCTUREDIRECTIONS"",_sideText];" \n
       "_baseDistances = missionNamespace getVariable Format[""WF_%1STRUCTUREDISTANCES"",_sideText];" \n
       "_baseInProgress = [];" \n
       "_baseOrder = [""Barracks"",""Light"",""CommandCenter"",""Heavy"",""Aircraft"",""ServicePoint""];" \n
       "_baseStructureRelPos = [[50,50],[-50,50],[50,0],[50,-50],[-50,-50],[-50,0]];" \n
       "_baseTimerCheck = [];" \n
       "_baseWalls = [];" \n
       "" \n
       "_currentContent = 0;" \n
       "_crew = missionNamespace getVariable Format [""WF_%1SOLDIER"",_sideText];" \n
       "_driver = objNull;" \n
       "_overallDefenses = [];" \n
       "_repairPrice = missionNamespace getVariable 'WF_C_BASE_HQ_REPAIR_PRICE';" \n
       "_repairTruck = objNull;" \n
       "_victoryCondition = missionNamespace getVariable ""WF_C_GAMEPLAY_VICTORY_CONDITION"";" \n
       "" \n
       "_teams = (missionNamespace getVariable Format[""WF_%1TEAMS"",_sideText]);" \n
       "_templates = missionNamespace getVariable Format [""WF_%1AITEAMTEMPLATES"",_sideText];" \n
       "_teamUpgrades = missionNamespace getVariable Format [""WF_%1AITEAMUPGRADES"",_sideText];" \n
       "_totalSupply = 0;" \n
       "{_totalSupply = _totalSupply + (_x getVariable 'maxSupplyValue')} forEach towns;" \n
       "" \n
       "_currency_system = missionNamespace getVariable ""WF_C_ECONOMY_CURRENCY_SYSTEM"";" \n
       "" \n
       "" \n
       "_overallDefenses = missionNamespace getVariable Format [""WF_Defenses_%1_Global"",_sideText];" \n
       "_currentContent = 0;" \n
       "_totalContent = 0;" \n
       "if !(isNil ""_overallDefenses"") then {_totalContent = count _overallDefenses} else {_overallDefenses = []};" \n
       "" \n
       "_baseDefenses = [];" \n
       "_defenses = missionNamespace getVariable Format [""WF_Defenses_%1"",_sideText];" \n
       "for '_i' from 0 to count(_baseDefensesTemplate)-1 do {_baseDefenses set [_i,["""",[]]]};" \n
       "if (isNil '_defenses') then {" \n
       "	missionNamespace setVariable [Format [""WF_Defenses_%1"",_sideText],_baseDefenses];" \n
       "} else {" \n
       "	//--- Check the distance;" \n
       "	_currentContent = -1;" \n
       "	for '_i' from 0 to _totalContent-1 do {	" \n
       "		_defenses = _overallDefenses select _i;" \n
       "		{" \n
       "			if (count(_x select 1) > 0) then {" \n
       "				if (alive (_x select 0)) then {" \n
       "					if ((_x select 0) distance _hq < 750) then {" \n
       "						_baseDefenses = _defenses;" \n
       "						_currentContent = _i;" \n
       "					};" \n
       "				};" \n
       "			};" \n
       "			if (_currentContent != -1) exitWith {};" \n
       "		} forEach _defenses;" \n
       "		if (_currentContent != -1) exitWith {};" \n
       "	};" \n
       "};" \n
       "" \n
       "if (_currentContent == -1) then {_currentContent = count _overallDefenses};" \n
       "" \n
       "_baseAiIntervalLast = time;" \n
       "_baseAlive = [false,false,false,false,false,false];" \n
       "_baseInProgress = [false,false,false,false,false,false];" \n
       "_baseTimerCheck = [0,0,0,0,0,0];" \n
       "_baseWalls = [[],[],[],[],[],[]];" \n
       "" \n
       "_isStartingFSM = true;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="Commander_Check";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"time - _lastUpdate > 10"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "End">*/
    class End
    {
      name = "End";
      init = /*%FSM<STATEINIT""">*/"_logik setVariable [""wf_aicom_running"", false];"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "Commander_Check">*/
    class Commander_Check
    {
      name = "Commander_Check";
      init = /*%FSM<STATEINIT""">*/"_commander = (_side) Call WFCO_FNC_GetCommanderTeam;" \n
       "" \n
       "_lastUpdate = time;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "Gameover">*/
        class Gameover
        {
          priority = 0.000000;
          to="End";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"WF_GameOver || !isNull _commander || !(_logik getVariable ""wf_aicom_running"")"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "AI">*/
        class AI
        {
          priority = 0.000000;
          to="Check_HQ";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"!WF_GameOver && isNull _commander"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "Check_HQ">*/
    class Check_HQ
    {
      name = "Check_HQ";
      init = /*%FSM<STATEINIT""">*/"_hq = (_side) Call WFCO_FNC_GetSideHQ;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "Alive">*/
        class Alive
        {
          priority = 0.000000;
          to="Check_HQ_Status";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"alive _hq"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "Check_HQ_Status">*/
    class Check_HQ_Status
    {
      name = "Check_HQ_Status";
      init = /*%FSM<STATEINIT""">*/"_hqDeployed = (_side) Call WFCO_FNC_GetSideHQDeployStatus;"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "Deployed">*/
        class Deployed
        {
          priority = 0.000000;
          to="Check_Move";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_hqDeployed"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "Mobilized">*/
        class Mobilized
        {
          priority = 0.000000;
          to="Check_Status";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"!_hqDeployed"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "Check_Status">*/
    class Check_Status
    {
      name = "Check_Status";
      init = /*%FSM<STATEINIT""">*/"_inRange = if (_hq distance _hqDeployAt < 200) then {true} else {false};"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "Empty">*/
        class Empty
        {
          priority = 0.000000;
          to="Spawn___Lead";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"!_isStartingFSM || !_inRange"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "Moving">*/
        class Moving
        {
          priority = 0.000000;
          to="Check_Position";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_isStartingFSM || _inRange"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "Spawn___Lead">*/
    class Spawn___Lead
    {
      name = "Spawn___Lead";
      init = /*%FSM<STATEINIT""">*/"if !(alive(driver _hq)) then {" \n
       "	_HQDriver = [_crew,(createGroup [_side, true]),getPos _hq,_sideID] Call WFCO_FNC_CreateUnit;" \n
       "	[_HQDriver] allowGetIn true;" \n
       "	_HQDriver moveInDriver _hq;" \n
       "	_HQDriver assignAsDriver _hq;" \n
       "	[_HQDriver] orderGetIn true;" \n
       "	_HQDriver doMove ([GetPos _hqDeployAt,10,20] Call WFCO_FNC_GetRandomPosition);" \n
       "};" \n
       "" \n
       "if (alive(driver _hq)) then {" \n
       "" \n
       "	if (_lastHQMovePos distance (getPos _hq) < 20 && !surfaceIsWater(getPos _hq)) then {" \n
       "		_lastHQMoveOrder = _lastHQMoveOrder + 5;" \n
       "	} else {" \n
       "		_lastHQMoveOrder = 0;" \n
       "	};" \n
       "" \n
       "	if (_lastHQMoveOrder > 40) then {" \n
       "		_lastHQMoveOrder = 0;" \n
       "		[_hq, getPos _hq, 50] Call WFCO_FNC_PlaceSafe;" \n
       "		(driver _hq) doMove ([GetPos _hqDeployAt,10,20] Call WFCO_FNC_GetRandomPosition);" \n
       "	};" \n
       "" \n
       "	_lastHQMovePos = getPos _hq;" \n
       "};"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="Commander_Check";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"time - _lastUpdate > 10"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "Check_Position">*/
    class Check_Position
    {
      name = "Check_Position";
      init = /*%FSM<STATEINIT""">*/"_canBeDeploy = true;" \n
       "" \n
       "//--- On multiplayer, ensure that there is no exploits." \n
       "if (isMultiplayer) then {" \n
       "	_tbpr = missionNamespace getVariable ""WF_C_TOWNS_BUILD_PROTECTION_RANGE"";" \n
       "	_isPlayerOnSide = false;" \n
       "	" \n
       "	{if (!isNull _x) then {if (side _x == _side && isPlayer _x) exitWith {_isPlayerOnSide = true}}} forEach playableUnits;" \n
       "	" \n
       "	if (_isPlayerOnSide) then {" \n
       "		{if (_x distance _hq < _tbpr) exitWith {_canBeDeploy = false}} forEach towns;" \n
       "	};" \n
       "};" \n
       "" \n
       "//--- HQ Can be deployed." \n
       "if (_canBeDeploy) then {" \n
       "	if (alive(driver _hq)) then {(driver _hq) setDammage 1};" \n
       "" \n
       "	_pos = getPos _hq;" \n
       "	_pos set [2,0];" \n
       "	_pos = [_pos,((missionNamespace getVariable 'WF_C_BASE_COIN_AREA_HQ_UNDEPLOYED') select 0)+20] Call WFCO_FNC_GetSafePlace;" \n
       "	if (count _pos < 1) then {_pos = [_pos,((missionNamespace getVariable 'WF_C_BASE_COIN_AREA_HQ_UNDEPLOYED') select 0)+50] Call WFCO_FNC_GetSafePlace};" \n
       "	if (count _pos < 1) then {_pos = getPos (_logik getVariable ""wf_startpos"")};" \n
       "	_dir = getDir _hq;" \n
       "	_currency = (_side) Call WFCO_FNC_GetSideSupply;" \n
       "" \n
       "	//--- Ensure that we have the supply required to deploy the HQ." \n
       "	if (_currency >= (_costs select _hqType)) then {" \n
       "		[(_names select _hqType),_side,_pos,_dir, _hqType] spawn WFSE_fnc_HQSite;" \n
       "		[_side, -(_costs select _hqType)] Call WFCO_FNC_ChangeSideSupply;" \n
       "		if (_isStartingFSM) then {_isStartingFSM = false};" \n
       "	};" \n
       "" \n
       "	//--- Reset local variable." \n
       "	_overallDefenses = missionNamespace getVariable Format [""WF_Defenses_%1_Global"",_sideText];" \n
       "	_currentContent = 0;" \n
       "	_totalContent = 0;" \n
       "	if !(isNil ""_overallDefenses"") then {_totalContent = count _overallDefenses} else {_overallDefenses = []};" \n
       "" \n
       "	_baseDefenses = [];" \n
       "	_defenses = missionNamespace getVariable Format [""WF_Defenses_%1"",_sideText];" \n
       "	for '_i' from 0 to count(_baseDefensesTemplate)-1 do {_baseDefenses set [_i,["""",[]]]};" \n
       "	if (isNil '_defenses') then {" \n
       "		missionNamespace setVariable [Format [""WF_Defenses_%1"",_sideText],_baseDefenses];" \n
       "	} else {" \n
       "		//--- Check the distance;" \n
       "		_currentContent = -1;" \n
       "		for '_i' from 0 to _totalContent-1 do {	" \n
       "			_defenses = _overallDefenses select _i;" \n
       "			{" \n
       "				if (count(_x select 1) > 0) then {" \n
       "					if (alive (_x select 0)) then {" \n
       "						if ((_x select 0) distance _hq < 750) then {" \n
       "							_baseDefenses = _defenses;" \n
       "							_currentContent = _i;" \n
       "						};" \n
       "					};" \n
       "				};" \n
       "				if (_currentContent != -1) exitWith {};" \n
       "			} forEach _defenses;" \n
       "			if (_currentContent != -1) exitWith {};" \n
       "		};" \n
       "	};" \n
       "" \n
       "	if (_currentContent == -1) then {_currentContent = count _overallDefenses};" \n
       "" \n
       "	_baseAiIntervalLast = time;" \n
       "	_baseAlive = [false,false,false,false,false,false];" \n
       "	_baseInProgress = [false,false,false,false,false,false];" \n
       "	_baseTimerCheck = [time,time,time,time,time,time];" \n
       "	_baseWalls = [[],[],[],[],[],[]];" \n
       "};" \n
       ""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="Commander_Check";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"time - _lastUpdate > 10"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "Check_Move">*/
    class Check_Move
    {
      name = "Check_Move";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "Proceed">*/
        class Proceed
        {
          priority = 0.000000;
          to="Check_Base";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"!_hqCanMove"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "Check_Base">*/
    class Check_Base
    {
      name = "Check_Base";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "Skip">*/
        class Skip
        {
          priority = 0.000000;
          to="Skip";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"time - _lastUpdateBase <= 45"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "Update">*/
        class Update
        {
          priority = 0.000000;
          to="Update_Base";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"time - _lastUpdateBase > 45"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "Skip">*/
    class Skip
    {
      name = "Skip";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="Check_Defenses";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "Update_Base">*/
    class Update_Base
    {
      name = "Update_Base";
      init = /*%FSM<STATEINIT""">*/"_lastUpdateBase = time;" \n
       "" \n
       "_buildings = (_side) Call WFCO_FNC_GetSideStructures;" \n
       "" \n
       "//--- Get the buildings close of the HQ by type (repair if downed)." \n
       "_barracks = ['BARRACKSTYPE',_buildings,750,_side,_hq] Call WFCO_FNC_BuildingInRange;" \n
       "_light = ['LIGHTTYPE',_buildings,750,_side,_hq] Call WFCO_FNC_BuildingInRange;" \n
       "_heavy = ['HEAVYTYPE',_buildings,750,_side,_hq] Call WFCO_FNC_BuildingInRange;" \n
       "_air = ['AIRCRAFTTYPE',_buildings,750,_side,_hq] Call WFCO_FNC_BuildingInRange;" \n
       "_servicePoint = ['SERVICEPOINTTYPE',_buildings,750,_side,_hq] Call WFCO_FNC_BuildingInRange;" \n
       "_commandCenter = ['COMMANDCENTERTYPE',_buildings,750,_side,_hq] Call WFCO_FNC_BuildingInRange;" \n
       "" \n
       "//--- Get the building in progress." \n
       "_contentInProgress = [objNull,objNull,objNull,objNull,objNull,objNull];" \n
       "_nearLogics = _hq nearEntities [[""LocationLogicStart""],550];" \n
       "{" \n
       "	_get = _x getVariable 'WF_B_Type';" \n
       "	" \n
       "	if !(isNil '_get') then {" \n
       "		switch (_get) do {" \n
       "			case ""Barracks"": {_contentInProgress set [0, _x]};" \n
       "			case ""Light"": {_contentInProgress set [1, _x]};" \n
       "			case ""CommandCenter"": {_contentInProgress set [2, _x]};" \n
       "			case ""Heavy"": {_contentInProgress set [3, _x]};" \n
       "			case ""Aircraft"": {_contentInProgress set [4, _x]};" \n
       "			case ""ServicePoint"": {_contentInProgress set [5, _x]};" \n
       "		};" \n
       "	};" \n
       "} forEach _nearLogics;" \n
       "" \n
       "//--- Is there a CC at least." \n
       "_check = [_side, missionNamespace getVariable Format [""WF_%1COMMANDCENTERTYPE"",_sideText],_buildings] Call WFCO_FNC_GetFactories;" \n
       "_ccAvailable = if (count _check == 0) then {false} else {true};" \n
       "" \n
       "_content = [_barracks,_light,_commandCenter,_heavy,_air,_servicePoint];" \n
       "_baseStructurePos = [];" \n
       "{_baseStructurePos = _baseStructurePos + [getPos _x]} forEach _content;" \n
       "" \n
       "//--- Check for construction etc." \n
       "for '_i' from 0 to count(_content)-1 do {" \n
       "	_currency = (_side) Call WFCO_FNC_GetSideSupply;" \n
       "	_currentStructure = _content select _i;" \n
       "	_isInProgress = _baseInProgress select _i;" \n
       "	_isAlive = _baseAlive select _i;" \n
       "	_timer = _baseTimerCheck select _i;" \n
       "	_isLogicInProgress = _contentInProgress select _i;" \n
       "" \n
       "	//--- Bad Catch?" \n
       "	if (_isInProgress && !_isAlive && _timer > 400) then {" \n
       "		_baseInProgress set [_i, false];" \n
       "	};" \n
       "" \n
       "	//--- Alive?" \n
       "	if (alive _currentStructure) then {if !(_isAlive) then {_baseAlive set [_i , true]}};" \n
       "" \n
       "	//--- Destroyed?" \n
       "	if (_isInProgress && _isAlive && !(alive _currentStructure)) then {" \n
       "		_baseAlive set [_i , false];" \n
       "		_baseInProgress set [_i, false];" \n
       "	};" \n
       "" \n
       "	//--- Not in progress, we can build it." \n
       "	if (!_isInProgress && isNull(_currentStructure) && isNull(_isLogicInProgress)) then {" \n
       "		_currentType = _baseOrder select _i;" \n
       "		_type = _types find _currentType;" \n
       "" \n
       "		//--- Check the supply." \n
       "		_cost = _costs select _type;" \n
       "		if (_cost <= _currency) then {" \n
       "" \n
       "			//--- check about the building limit." \n
       "			_buildLimit = false;" \n
       "			_current = _logik getVariable ""wf_structures_live"";" \n
       "			_limit = missionNamespace getVariable (Format['WF_C_STRUCTURES_MAX_%1',_currentType]);" \n
       "			if (isNil '_limit') then {_limit = 4}; //--- Default." \n
       "			if ((_current select (_type-1)) >= _limit) then {_buildLimit = true};" \n
       "" \n
       "			//--- Can build." \n
       "			if !(_buildLimit) then {" \n
       "				_pos = getPos _hq;" \n
       "				_x = _pos select 0;" \n
       "				_y = _pos select 1;" \n
       "				_pos = [];" \n
       "				_pos set [0,((_baseStructureRelPos select _i) select 0) + _x];" \n
       "				_pos set [1,((_baseStructureRelPos select _i) select 1) + _y];" \n
       "				_newPos = [0,0,0];" \n
       "				_roads = [];" \n
       "" \n
       "				_attempts = 0;" \n
       "				_max = 100;" \n
       "				while {true} do {" \n
       "					_newPos = [_pos,30,_max,10,0,50,0] Call BIS_fnc_findSafePos;" \n
       "					_aiSpawnPos = [_newPos,_baseDistances select _i,_baseDirections select _i] Call WFCO_FNC_GetPositionFrom;" \n
       "					_aiSpawnPos set [2,0];" \n
       "					_roads = _newPos nearRoads 30;" \n
       "					_roads2 = _aiSpawnPos nearRoads 30;" \n
       "					" \n
       "					_isFlat = _aiSpawnPos isFlatEmpty [" \n
       "						5,	//--- Minimal distance from another object" \n
       "						0,				//--- If 0, just check position. If >0, select new one" \n
       "						0.6,				//--- Max gradient" \n
       "						5,	//--- Gradient area" \n
       "						0,				//--- 0 for restricted water, 2 for required water," \n
       "						false,				//--- True if some water can be in 25m radius" \n
       "						objNull			//--- Ignored object" \n
       "					];" \n
       "					" \n
       "					_isTooClose = false;" \n
       "					{if (_x distance _newPos < 70) exitWith {_isTooClose = true}} forEach _baseStructurePos;" \n
       "					if (count _roads == 0 && count _roads2 == 0 && !_isTooClose && count _isFlat != 0) exitWith {};" \n
       "					_attempts = _attempts + 1;" \n
       "					if (_attempts > 100 && _max == 100) then {_max = _max + 150};" \n
       "				};" \n
       "				_baseStructurePos set [_i, _newPos];" \n
       "				_selected = _scripts select _type;" \n
       "				switch(_selected)do{" \n
       "					case ""HQSite"":{" \n
       "						[(_names select _type),_side,_newPos,0,_type] spawn WFSE_fnc_HQSite;" \n
       "					};" \n
       "					case ""SmallSite"":{" \n
       "						[(_names select _type),_side,_newPos,0,_type] spawn WFSE_fnc_SmallSite;" \n
       "					};" \n
       "					case ""MediumSite"":{" \n
       "						[(_names select _type),_side,_newPos,0,_type] spawn WFSE_fnc_MediumSite;" \n
       "					};" \n
       "				};" \n
       "				" \n
       "				" \n
       "				[_side, -_cost] Call WFCO_FNC_ChangeSideSupply;" \n
       "				_baseInProgress set [_i, true];" \n
       "				_baseTimerCheck set [_i, time];" \n
       "				" \n
       "				_current set [_type - 1, (_current select (_type-1)) + 1];" \n
       "				_logik setVariable [""wf_structures_live"", _current, true];	" \n
       "			};" \n
       "		};" \n
       "	};" \n
       "};"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="Check_Defenses";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "Check_Defenses">*/
    class Check_Defenses
    {
      name = "Check_Defenses";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "Skip">*/
        class Skip
        {
          priority = 0.000000;
          to="Skip_1";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"isNull _barracks || time - _lastUpdateDefenses <= 80"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "Update">*/
        class Update
        {
          priority = 0.000000;
          to="Update_Defenses";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"!isNull _barracks && time - _lastUpdateDefenses > 80"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "Skip_1">*/
    class Skip_1
    {
      name = "Skip_1";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="Check_Upgrades";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "Update_Defenses">*/
    class Update_Defenses
    {
      name = "Update_Defenses";
      init = /*%FSM<STATEINIT""">*/"_lastUpdateDefenses = time;" \n
       "" \n
       "//--- Buildings checks" \n
       "for '_i' from 0 to count(_content)-1 do {" \n
       "	_building = _content select _i;" \n
       "	_type = _baseOrder select _i;" \n
       "	_buildingWall = _baseWalls select _i;" \n
       "" \n
       "	if (alive _building) then {" \n
       "		if (count _buildingWall == 0) then {" \n
       "			//--- Persistent check (Walls), only executed if the array is empty." \n
       "			_defenses = _building getVariable 'WF_Walls';" \n
       "			if !(isNil ""_defenses"") then {_baseWalls set [_i,_defenses]};" \n
       "	" \n
       "			_defenses = [_building,missionNamespace getVariable Format [""WF_NEURODEF_%1_WALLS"",_type],(_baseWalls select _i)] Call WFSE_fnc_CreateDefenseTemplate;" \n
       "			_baseWalls set [_i ,_defenses];" \n
       "			_building setVariable ['WF_Walls', _defenses];" \n
       "		} else {" \n
       "			{" \n
       "				if !(alive _x) exitWith {" \n
       "					_defenses = [_building,missionNamespace getVariable Format [""WF_NEURODEF_%1_WALLS"",_type],(_baseWalls select _i)] Call WFSE_fnc_CreateDefenseTemplate;" \n
       "					_baseWalls set [_i ,_defenses];" \n
       "					_building setVariable ['WF_Walls', _defenses];" \n
       "				};" \n
       "			} forEach (_baseWalls select _i);" \n
       "		};" \n
       "	} else {" \n
       "		if (count(_buildingWall) > 0) then {" \n
       "			{deleteVehicle _x} forEach (_baseWalls select _i);" \n
       "			_baseWalls set [_i, []];" \n
       "		};" \n
       "	};" \n
       "} forEach _content;" \n
       "" \n
       "//--- Defenses Check." \n
       "for '_i' from 0 to count(_baseDefenses)-1 do {" \n
       "	_defense = (_baseDefenses select _i) select 0;" \n
       "" \n
       "	//--- If object, it exist or existed." \n
       "	if (typename _defense == ""OBJECT"") then {" \n
       "		_template = (_baseDefenses select _i) select 1;" \n
       "		" \n
       "		if (alive _defense) then {" \n
       "			{" \n
       "				if !(alive _x) exitWith {" \n
       "					_template = _baseDefensesTemplate select _i;" \n
       "					_defenses = [_defense,missionNamespace getVariable Format [""WF_NEURODEF_%1"",_template select 3]] Call WFSE_fnc_CreateDefenseTemplate;" \n
       "					_baseDefenses set [_i, [_defense,_defenses]];" \n
       "					missionNamespace setVariable [Format [""WF_Defenses_%1"",_sideText],_baseDefenses];" \n
       "					_overallDefenses set [_currentContent, _baseDefenses];" \n
       "					missionNamespace setVariable [Format [""WF_Defenses_%1_Global"",_sideText], _overallDefenses];" \n
       "				};" \n
       "			} forEach _template;" \n
       "" \n
       "			//--- Keep the defense able to fire." \n
       "			if !(isNull(gunner _defense)) then {" \n
       "				if !(someAmmo _defense) then {[_defense,_side] Call WFCO_FNC_RearmVehicle};" \n
       "			};" \n
       "		} else {" \n
       "			if (count(_template) > 0) then {" \n
       "				{deleteVehicle _x} forEach _template;" \n
       "				_baseDefenses set [_i, ["""",[]]];" \n
       "				_defense = (_baseDefenses select _i) select 0;" \n
       "				missionNamespace setVariable [Format [""WF_Defenses_%1"",_sideText],_baseDefenses];" \n
       "				_overallDefenses set [_currentContent, _baseDefenses];" \n
       "				missionNamespace setVariable [Format [""WF_Defenses_%1_Global"",_sideText], _overallDefenses];" \n
       "			};" \n
       "		};" \n
       "	};" \n
       "" \n
       "	//--- If string, it don't exist." \n
       "	if (typename _defense == ""STRING"") then {" \n
       "		_aiComFunds = (_side) Call WFSE_fnc_GetAICommanderFunds;" \n
       "		_template = _baseDefensesTemplate select _i;" \n
       "		_pool = _template select 0;" \n
       "		_picked = _pool select round(random((count _pool)-1));" \n
       "" \n
       "		//--- Grab the defense price." \n
       "		_details = missionNamespace getVariable _picked;" \n
       "		_price = if !(isNil '_details') then {_details select QUERYUNITPRICE} else {400};" \n
       "" \n
       "		if (_aiComFunds >= _price) then {" \n
       "			[_side, -_price] Call WFSE_fnc_ChangeAICommanderFunds;" \n
       "		" \n
       "			_pos = getPos _hq;" \n
       "			_x = _pos select 0;" \n
       "			_y = _pos select 1;" \n
       "			_pos = [];" \n
       "			_pos set [0,((_template select 1) select 0) + _x];" \n
       "			_pos set [1,((_template select 1) select 1) + _y];" \n
       "			_newPos = [0,0,0];" \n
       "			_roads = [];" \n
       "" \n
       "			_attempts = 0;" \n
       "			_max = 100;" \n
       "			while {true} do {" \n
       "				_newPos = [_pos,30,_max,10,0,50,0] Call BIS_fnc_findSafePos;" \n
       "				_roads = _newPos nearRoads 24;" \n
       "" \n
       "				_isTooClose = false;" \n
       "				{if (_x distance _newPos < 30) exitWith {_isTooClose = true}} forEach _content;" \n
       "				if (count _roads == 0 && !_isTooClose && count(_newPos nearEntities 15) == 0) exitWith {};" \n
       "				_attempts = _attempts + 1;" \n
       "				if (_attempts > 100 && _max == 100) then {_max = _max + 150};" \n
       "			};" \n
       "" \n
       "			_created = [_picked,_side,_newPos,_template select 2,true,true,(missionNamespace getVariable ""WF_C_BASE_DEFENSE_MANNING_RANGE"")*3] Call WFSE_fnc_ConstructDefense;" \n
       "" \n
       "			//--- Extra?" \n
       "			_defenses = [];" \n
       "			_extra = _template select 3;" \n
       "			if (_extra != """") then {" \n
       "				_defenses = [_created,missionNamespace getVariable Format [""WF_NEURODEF_%1"",_extra]] Call WFSE_fnc_CreateDefenseTemplate;" \n
       "			};" \n
       "" \n
       "			_baseDefenses set [_i, [_created,_defenses]];" \n
       "			missionNamespace setVariable [Format [""WF_Defenses_%1"",_sideText],_baseDefenses];" \n
       "			_overallDefenses set [_currentContent, _baseDefenses];" \n
       "			missionNamespace setVariable [Format [""WF_Defenses_%1_Global"",_sideText], _overallDefenses];" \n
       "		};" \n
       "	};" \n
       "};"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="Check_Upgrades";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "Check_Upgrades">*/
    class Check_Upgrades
    {
      name = "Check_Upgrades";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "Skip">*/
        class Skip
        {
          priority = 0.000000;
          to="Skip_2";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"!_ccAvailable || time - _lastUpdateUpgrades <= 60"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
        /*%FSM<LINK "Update">*/
        class Update
        {
          priority = 0.000000;
          to="Update_Upgrades";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/"_ccAvailable && time - _lastUpdateUpgrades > 60"/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "Skip_2">*/
    class Skip_2
    {
      name = "Skip_2";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="Check_Move_1";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "Update_Upgrades">*/
    class Update_Upgrades
    {
      name = "Update_Upgrades";
      init = /*%FSM<STATEINIT""">*/"_lastUpdateUpgrades = time;" \n
       "" \n
       "if !(_logik getVariable ""wf_upgrading"") then {" \n
       "	(_side) Spawn WFSE_fnc_aiComUpgrade; " \n
       "};"/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
        /*%FSM<LINK "_">*/
        class _
        {
          priority = 0.000000;
          to="Check_Move_1";
          precondition = /*%FSM<CONDPRECONDITION""">*/""/*%FSM</CONDPRECONDITION""">*/;
          condition=/*%FSM<CONDITION""">*/""/*%FSM</CONDITION""">*/;
          action=/*%FSM<ACTION""">*/""/*%FSM</ACTION""">*/;
        };
        /*%FSM</LINK>*/
      };
    };
    /*%FSM</STATE>*/
    /*%FSM<STATE "Check_Move_1">*/
    class Check_Move_1
    {
      name = "Check_Move_1";
      init = /*%FSM<STATEINIT""">*/""/*%FSM</STATEINIT""">*/;
      precondition = /*%FSM<STATEPRECONDITION""">*/""/*%FSM</STATEPRECONDITION""">*/;
      class Links
      {
      };
    };
    /*%FSM</STATE>*/
  };
  initState="Init";
  finalStates[] =
  {
    "End",
  };
};
/*%FSM</COMPILE>*/